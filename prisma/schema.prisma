generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  admin   Admin?
  trainer Trainer?
  trainee Trainee?
}

model Admin {
  id        String   @id @default(uuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Trainer {
  id             String     @id @default(uuid())
  userId         String     @unique
  specialization String?
  user           User       @relation(fields: [userId], references: [id])
  schedules      Schedule[]
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model Trainee {
  id        String    @id @default(uuid())
  userId    String    @unique
  user      User      @relation(fields: [userId], references: [id])
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Schedule {
  id          String    @id @default(uuid())
  title       String    @unique
  startTime   DateTime
  endTime     DateTime
  trainerId   String
  maxTrainees Int       @default(10)
  trainer     Trainer   @relation(fields: [trainerId], references: [id])
  bookings    Booking[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Booking {
  id         String   @id @default(uuid())
  scheduleId String
  traineeId  String
  schedule   Schedule @relation(fields: [scheduleId], references: [id])
  trainee    Trainee  @relation(fields: [traineeId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Role {
  ADMIN
  TRAINER
  TRAINEE
}
